// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ccgraph.proto

package com.ccgraph.ccgraph;

/**
 * Protobuf type {@code CCGraphRPC.Measurement}
 */
public final class Measurement extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:CCGraphRPC.Measurement)
    MeasurementOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Measurement.newBuilder() to construct.
  private Measurement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Measurement() {
    stepTimes_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Measurement();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Measurement(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            txnTime_ = input.readUInt64();
            break;
          }
          case 16: {

            retries_ = input.readUInt64();
            break;
          }
          case 24: {

            abortTime_ = input.readUInt64();
            break;
          }
          case 32: {

            ccTime_ = input.readUInt64();
            break;
          }
          case 40: {

            indexTime_ = input.readUInt64();
            break;
          }
          case 48: {

            ccStoreTime_ = input.readUInt64();
            break;
          }
          case 56: {

            usedLocks_ = input.readUInt64();
            break;
          }
          case 64: {

            requestedLocks_ = input.readUInt64();
            break;
          }
          case 72: {

            blockedLocks_ = input.readUInt64();
            break;
          }
          case 80: {

            usedVersions_ = input.readUInt64();
            break;
          }
          case 88: {

            requestedVersions_ = input.readUInt64();
            break;
          }
          case 96: {

            blockedVersions_ = input.readUInt64();
            break;
          }
          case 104: {

            objectsRead_ = input.readUInt64();
            break;
          }
          case 112: {

            objectsWrite_ = input.readUInt64();
            break;
          }
          case 120: {

            timeWithoutNetwork_ = input.readUInt64();
            break;
          }
          case 128: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              stepTimes_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            stepTimes_.addLong(input.readUInt64());
            break;
          }
          case 130: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              stepTimes_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              stepTimes_.addLong(input.readUInt64());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        stepTimes_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Measurement_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Measurement_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ccgraph.ccgraph.Measurement.class, com.ccgraph.ccgraph.Measurement.Builder.class);
  }

  public static final int TXN_TIME_FIELD_NUMBER = 1;
  private long txnTime_;
  /**
   * <pre>
   ** for measurement 
   * </pre>
   *
   * <code>uint64 txn_time = 1;</code>
   * @return The txnTime.
   */
  @java.lang.Override
  public long getTxnTime() {
    return txnTime_;
  }

  public static final int RETRIES_FIELD_NUMBER = 2;
  private long retries_;
  /**
   * <pre>
   * we clear lock count across retry
   * </pre>
   *
   * <code>uint64 retries = 2;</code>
   * @return The retries.
   */
  @java.lang.Override
  public long getRetries() {
    return retries_;
  }

  public static final int ABORT_TIME_FIELD_NUMBER = 3;
  private long abortTime_;
  /**
   * <code>uint64 abort_time = 3;</code>
   * @return The abortTime.
   */
  @java.lang.Override
  public long getAbortTime() {
    return abortTime_;
  }

  public static final int CC_TIME_FIELD_NUMBER = 4;
  private long ccTime_;
  /**
   * <pre>
   **
   * &#64;brief the once result for no retry, or the final success result for auto retry
   * </pre>
   *
   * <code>uint64 cc_time = 4;</code>
   * @return The ccTime.
   */
  @java.lang.Override
  public long getCcTime() {
    return ccTime_;
  }

  public static final int INDEX_TIME_FIELD_NUMBER = 5;
  private long indexTime_;
  /**
   * <code>uint64 index_time = 5;</code>
   * @return The indexTime.
   */
  @java.lang.Override
  public long getIndexTime() {
    return indexTime_;
  }

  public static final int CC_STORE_TIME_FIELD_NUMBER = 6;
  private long ccStoreTime_;
  /**
   * <code>uint64 cc_store_time = 6;</code>
   * @return The ccStoreTime.
   */
  @java.lang.Override
  public long getCcStoreTime() {
    return ccStoreTime_;
  }

  public static final int USED_LOCKS_FIELD_NUMBER = 7;
  private long usedLocks_;
  /**
   * <pre>
   **
   * &#64;brief for 2pl
   * </pre>
   *
   * <code>uint64 used_locks = 7;</code>
   * @return The usedLocks.
   */
  @java.lang.Override
  public long getUsedLocks() {
    return usedLocks_;
  }

  public static final int REQUESTED_LOCKS_FIELD_NUMBER = 8;
  private long requestedLocks_;
  /**
   * <code>uint64 requested_locks = 8;</code>
   * @return The requestedLocks.
   */
  @java.lang.Override
  public long getRequestedLocks() {
    return requestedLocks_;
  }

  public static final int BLOCKED_LOCKS_FIELD_NUMBER = 9;
  private long blockedLocks_;
  /**
   * <code>uint64 blocked_locks = 9;</code>
   * @return The blockedLocks.
   */
  @java.lang.Override
  public long getBlockedLocks() {
    return blockedLocks_;
  }

  public static final int USED_VERSIONS_FIELD_NUMBER = 10;
  private long usedVersions_;
  /**
   * <pre>
   **
   * &#64;brief for occ
   * </pre>
   *
   * <code>uint64 used_versions = 10;</code>
   * @return The usedVersions.
   */
  @java.lang.Override
  public long getUsedVersions() {
    return usedVersions_;
  }

  public static final int REQUESTED_VERSIONS_FIELD_NUMBER = 11;
  private long requestedVersions_;
  /**
   * <code>uint64 requested_versions = 11;</code>
   * @return The requestedVersions.
   */
  @java.lang.Override
  public long getRequestedVersions() {
    return requestedVersions_;
  }

  public static final int BLOCKED_VERSIONS_FIELD_NUMBER = 12;
  private long blockedVersions_;
  /**
   * <code>uint64 blocked_versions = 12;</code>
   * @return The blockedVersions.
   */
  @java.lang.Override
  public long getBlockedVersions() {
    return blockedVersions_;
  }

  public static final int OBJECTS_READ_FIELD_NUMBER = 13;
  private long objectsRead_;
  /**
   * <code>uint64 objects_read = 13;</code>
   * @return The objectsRead.
   */
  @java.lang.Override
  public long getObjectsRead() {
    return objectsRead_;
  }

  public static final int OBJECTS_WRITE_FIELD_NUMBER = 14;
  private long objectsWrite_;
  /**
   * <code>uint64 objects_write = 14;</code>
   * @return The objectsWrite.
   */
  @java.lang.Override
  public long getObjectsWrite() {
    return objectsWrite_;
  }

  public static final int TIME_WITHOUT_NETWORK_FIELD_NUMBER = 15;
  private long timeWithoutNetwork_;
  /**
   * <code>uint64 time_without_network = 15;</code>
   * @return The timeWithoutNetwork.
   */
  @java.lang.Override
  public long getTimeWithoutNetwork() {
    return timeWithoutNetwork_;
  }

  public static final int STEP_TIMES_FIELD_NUMBER = 16;
  private com.google.protobuf.Internal.LongList stepTimes_;
  /**
   * <code>repeated uint64 step_times = 16;</code>
   * @return A list containing the stepTimes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getStepTimesList() {
    return stepTimes_;
  }
  /**
   * <code>repeated uint64 step_times = 16;</code>
   * @return The count of stepTimes.
   */
  public int getStepTimesCount() {
    return stepTimes_.size();
  }
  /**
   * <code>repeated uint64 step_times = 16;</code>
   * @param index The index of the element to return.
   * @return The stepTimes at the given index.
   */
  public long getStepTimes(int index) {
    return stepTimes_.getLong(index);
  }
  private int stepTimesMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (txnTime_ != 0L) {
      output.writeUInt64(1, txnTime_);
    }
    if (retries_ != 0L) {
      output.writeUInt64(2, retries_);
    }
    if (abortTime_ != 0L) {
      output.writeUInt64(3, abortTime_);
    }
    if (ccTime_ != 0L) {
      output.writeUInt64(4, ccTime_);
    }
    if (indexTime_ != 0L) {
      output.writeUInt64(5, indexTime_);
    }
    if (ccStoreTime_ != 0L) {
      output.writeUInt64(6, ccStoreTime_);
    }
    if (usedLocks_ != 0L) {
      output.writeUInt64(7, usedLocks_);
    }
    if (requestedLocks_ != 0L) {
      output.writeUInt64(8, requestedLocks_);
    }
    if (blockedLocks_ != 0L) {
      output.writeUInt64(9, blockedLocks_);
    }
    if (usedVersions_ != 0L) {
      output.writeUInt64(10, usedVersions_);
    }
    if (requestedVersions_ != 0L) {
      output.writeUInt64(11, requestedVersions_);
    }
    if (blockedVersions_ != 0L) {
      output.writeUInt64(12, blockedVersions_);
    }
    if (objectsRead_ != 0L) {
      output.writeUInt64(13, objectsRead_);
    }
    if (objectsWrite_ != 0L) {
      output.writeUInt64(14, objectsWrite_);
    }
    if (timeWithoutNetwork_ != 0L) {
      output.writeUInt64(15, timeWithoutNetwork_);
    }
    if (getStepTimesList().size() > 0) {
      output.writeUInt32NoTag(130);
      output.writeUInt32NoTag(stepTimesMemoizedSerializedSize);
    }
    for (int i = 0; i < stepTimes_.size(); i++) {
      output.writeUInt64NoTag(stepTimes_.getLong(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (txnTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, txnTime_);
    }
    if (retries_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, retries_);
    }
    if (abortTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, abortTime_);
    }
    if (ccTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, ccTime_);
    }
    if (indexTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, indexTime_);
    }
    if (ccStoreTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, ccStoreTime_);
    }
    if (usedLocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, usedLocks_);
    }
    if (requestedLocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, requestedLocks_);
    }
    if (blockedLocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, blockedLocks_);
    }
    if (usedVersions_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, usedVersions_);
    }
    if (requestedVersions_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(11, requestedVersions_);
    }
    if (blockedVersions_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(12, blockedVersions_);
    }
    if (objectsRead_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(13, objectsRead_);
    }
    if (objectsWrite_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(14, objectsWrite_);
    }
    if (timeWithoutNetwork_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(15, timeWithoutNetwork_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stepTimes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt64SizeNoTag(stepTimes_.getLong(i));
      }
      size += dataSize;
      if (!getStepTimesList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      stepTimesMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ccgraph.ccgraph.Measurement)) {
      return super.equals(obj);
    }
    com.ccgraph.ccgraph.Measurement other = (com.ccgraph.ccgraph.Measurement) obj;

    if (getTxnTime()
        != other.getTxnTime()) return false;
    if (getRetries()
        != other.getRetries()) return false;
    if (getAbortTime()
        != other.getAbortTime()) return false;
    if (getCcTime()
        != other.getCcTime()) return false;
    if (getIndexTime()
        != other.getIndexTime()) return false;
    if (getCcStoreTime()
        != other.getCcStoreTime()) return false;
    if (getUsedLocks()
        != other.getUsedLocks()) return false;
    if (getRequestedLocks()
        != other.getRequestedLocks()) return false;
    if (getBlockedLocks()
        != other.getBlockedLocks()) return false;
    if (getUsedVersions()
        != other.getUsedVersions()) return false;
    if (getRequestedVersions()
        != other.getRequestedVersions()) return false;
    if (getBlockedVersions()
        != other.getBlockedVersions()) return false;
    if (getObjectsRead()
        != other.getObjectsRead()) return false;
    if (getObjectsWrite()
        != other.getObjectsWrite()) return false;
    if (getTimeWithoutNetwork()
        != other.getTimeWithoutNetwork()) return false;
    if (!getStepTimesList()
        .equals(other.getStepTimesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TXN_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTxnTime());
    hash = (37 * hash) + RETRIES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRetries());
    hash = (37 * hash) + ABORT_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAbortTime());
    hash = (37 * hash) + CC_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCcTime());
    hash = (37 * hash) + INDEX_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getIndexTime());
    hash = (37 * hash) + CC_STORE_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCcStoreTime());
    hash = (37 * hash) + USED_LOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsedLocks());
    hash = (37 * hash) + REQUESTED_LOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRequestedLocks());
    hash = (37 * hash) + BLOCKED_LOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBlockedLocks());
    hash = (37 * hash) + USED_VERSIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsedVersions());
    hash = (37 * hash) + REQUESTED_VERSIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRequestedVersions());
    hash = (37 * hash) + BLOCKED_VERSIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBlockedVersions());
    hash = (37 * hash) + OBJECTS_READ_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getObjectsRead());
    hash = (37 * hash) + OBJECTS_WRITE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getObjectsWrite());
    hash = (37 * hash) + TIME_WITHOUT_NETWORK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimeWithoutNetwork());
    if (getStepTimesCount() > 0) {
      hash = (37 * hash) + STEP_TIMES_FIELD_NUMBER;
      hash = (53 * hash) + getStepTimesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ccgraph.ccgraph.Measurement parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Measurement parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Measurement parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Measurement parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ccgraph.ccgraph.Measurement prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code CCGraphRPC.Measurement}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:CCGraphRPC.Measurement)
      com.ccgraph.ccgraph.MeasurementOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Measurement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Measurement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ccgraph.ccgraph.Measurement.class, com.ccgraph.ccgraph.Measurement.Builder.class);
    }

    // Construct using com.ccgraph.ccgraph.Measurement.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      txnTime_ = 0L;

      retries_ = 0L;

      abortTime_ = 0L;

      ccTime_ = 0L;

      indexTime_ = 0L;

      ccStoreTime_ = 0L;

      usedLocks_ = 0L;

      requestedLocks_ = 0L;

      blockedLocks_ = 0L;

      usedVersions_ = 0L;

      requestedVersions_ = 0L;

      blockedVersions_ = 0L;

      objectsRead_ = 0L;

      objectsWrite_ = 0L;

      timeWithoutNetwork_ = 0L;

      stepTimes_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Measurement_descriptor;
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Measurement getDefaultInstanceForType() {
      return com.ccgraph.ccgraph.Measurement.getDefaultInstance();
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Measurement build() {
      com.ccgraph.ccgraph.Measurement result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Measurement buildPartial() {
      com.ccgraph.ccgraph.Measurement result = new com.ccgraph.ccgraph.Measurement(this);
      int from_bitField0_ = bitField0_;
      result.txnTime_ = txnTime_;
      result.retries_ = retries_;
      result.abortTime_ = abortTime_;
      result.ccTime_ = ccTime_;
      result.indexTime_ = indexTime_;
      result.ccStoreTime_ = ccStoreTime_;
      result.usedLocks_ = usedLocks_;
      result.requestedLocks_ = requestedLocks_;
      result.blockedLocks_ = blockedLocks_;
      result.usedVersions_ = usedVersions_;
      result.requestedVersions_ = requestedVersions_;
      result.blockedVersions_ = blockedVersions_;
      result.objectsRead_ = objectsRead_;
      result.objectsWrite_ = objectsWrite_;
      result.timeWithoutNetwork_ = timeWithoutNetwork_;
      if (((bitField0_ & 0x00000001) != 0)) {
        stepTimes_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.stepTimes_ = stepTimes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ccgraph.ccgraph.Measurement) {
        return mergeFrom((com.ccgraph.ccgraph.Measurement)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ccgraph.ccgraph.Measurement other) {
      if (other == com.ccgraph.ccgraph.Measurement.getDefaultInstance()) return this;
      if (other.getTxnTime() != 0L) {
        setTxnTime(other.getTxnTime());
      }
      if (other.getRetries() != 0L) {
        setRetries(other.getRetries());
      }
      if (other.getAbortTime() != 0L) {
        setAbortTime(other.getAbortTime());
      }
      if (other.getCcTime() != 0L) {
        setCcTime(other.getCcTime());
      }
      if (other.getIndexTime() != 0L) {
        setIndexTime(other.getIndexTime());
      }
      if (other.getCcStoreTime() != 0L) {
        setCcStoreTime(other.getCcStoreTime());
      }
      if (other.getUsedLocks() != 0L) {
        setUsedLocks(other.getUsedLocks());
      }
      if (other.getRequestedLocks() != 0L) {
        setRequestedLocks(other.getRequestedLocks());
      }
      if (other.getBlockedLocks() != 0L) {
        setBlockedLocks(other.getBlockedLocks());
      }
      if (other.getUsedVersions() != 0L) {
        setUsedVersions(other.getUsedVersions());
      }
      if (other.getRequestedVersions() != 0L) {
        setRequestedVersions(other.getRequestedVersions());
      }
      if (other.getBlockedVersions() != 0L) {
        setBlockedVersions(other.getBlockedVersions());
      }
      if (other.getObjectsRead() != 0L) {
        setObjectsRead(other.getObjectsRead());
      }
      if (other.getObjectsWrite() != 0L) {
        setObjectsWrite(other.getObjectsWrite());
      }
      if (other.getTimeWithoutNetwork() != 0L) {
        setTimeWithoutNetwork(other.getTimeWithoutNetwork());
      }
      if (!other.stepTimes_.isEmpty()) {
        if (stepTimes_.isEmpty()) {
          stepTimes_ = other.stepTimes_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureStepTimesIsMutable();
          stepTimes_.addAll(other.stepTimes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ccgraph.ccgraph.Measurement parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ccgraph.ccgraph.Measurement) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long txnTime_ ;
    /**
     * <pre>
     ** for measurement 
     * </pre>
     *
     * <code>uint64 txn_time = 1;</code>
     * @return The txnTime.
     */
    @java.lang.Override
    public long getTxnTime() {
      return txnTime_;
    }
    /**
     * <pre>
     ** for measurement 
     * </pre>
     *
     * <code>uint64 txn_time = 1;</code>
     * @param value The txnTime to set.
     * @return This builder for chaining.
     */
    public Builder setTxnTime(long value) {
      
      txnTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** for measurement 
     * </pre>
     *
     * <code>uint64 txn_time = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTxnTime() {
      
      txnTime_ = 0L;
      onChanged();
      return this;
    }

    private long retries_ ;
    /**
     * <pre>
     * we clear lock count across retry
     * </pre>
     *
     * <code>uint64 retries = 2;</code>
     * @return The retries.
     */
    @java.lang.Override
    public long getRetries() {
      return retries_;
    }
    /**
     * <pre>
     * we clear lock count across retry
     * </pre>
     *
     * <code>uint64 retries = 2;</code>
     * @param value The retries to set.
     * @return This builder for chaining.
     */
    public Builder setRetries(long value) {
      
      retries_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * we clear lock count across retry
     * </pre>
     *
     * <code>uint64 retries = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetries() {
      
      retries_ = 0L;
      onChanged();
      return this;
    }

    private long abortTime_ ;
    /**
     * <code>uint64 abort_time = 3;</code>
     * @return The abortTime.
     */
    @java.lang.Override
    public long getAbortTime() {
      return abortTime_;
    }
    /**
     * <code>uint64 abort_time = 3;</code>
     * @param value The abortTime to set.
     * @return This builder for chaining.
     */
    public Builder setAbortTime(long value) {
      
      abortTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 abort_time = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAbortTime() {
      
      abortTime_ = 0L;
      onChanged();
      return this;
    }

    private long ccTime_ ;
    /**
     * <pre>
     **
     * &#64;brief the once result for no retry, or the final success result for auto retry
     * </pre>
     *
     * <code>uint64 cc_time = 4;</code>
     * @return The ccTime.
     */
    @java.lang.Override
    public long getCcTime() {
      return ccTime_;
    }
    /**
     * <pre>
     **
     * &#64;brief the once result for no retry, or the final success result for auto retry
     * </pre>
     *
     * <code>uint64 cc_time = 4;</code>
     * @param value The ccTime to set.
     * @return This builder for chaining.
     */
    public Builder setCcTime(long value) {
      
      ccTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * &#64;brief the once result for no retry, or the final success result for auto retry
     * </pre>
     *
     * <code>uint64 cc_time = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCcTime() {
      
      ccTime_ = 0L;
      onChanged();
      return this;
    }

    private long indexTime_ ;
    /**
     * <code>uint64 index_time = 5;</code>
     * @return The indexTime.
     */
    @java.lang.Override
    public long getIndexTime() {
      return indexTime_;
    }
    /**
     * <code>uint64 index_time = 5;</code>
     * @param value The indexTime to set.
     * @return This builder for chaining.
     */
    public Builder setIndexTime(long value) {
      
      indexTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 index_time = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexTime() {
      
      indexTime_ = 0L;
      onChanged();
      return this;
    }

    private long ccStoreTime_ ;
    /**
     * <code>uint64 cc_store_time = 6;</code>
     * @return The ccStoreTime.
     */
    @java.lang.Override
    public long getCcStoreTime() {
      return ccStoreTime_;
    }
    /**
     * <code>uint64 cc_store_time = 6;</code>
     * @param value The ccStoreTime to set.
     * @return This builder for chaining.
     */
    public Builder setCcStoreTime(long value) {
      
      ccStoreTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 cc_store_time = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCcStoreTime() {
      
      ccStoreTime_ = 0L;
      onChanged();
      return this;
    }

    private long usedLocks_ ;
    /**
     * <pre>
     **
     * &#64;brief for 2pl
     * </pre>
     *
     * <code>uint64 used_locks = 7;</code>
     * @return The usedLocks.
     */
    @java.lang.Override
    public long getUsedLocks() {
      return usedLocks_;
    }
    /**
     * <pre>
     **
     * &#64;brief for 2pl
     * </pre>
     *
     * <code>uint64 used_locks = 7;</code>
     * @param value The usedLocks to set.
     * @return This builder for chaining.
     */
    public Builder setUsedLocks(long value) {
      
      usedLocks_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * &#64;brief for 2pl
     * </pre>
     *
     * <code>uint64 used_locks = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedLocks() {
      
      usedLocks_ = 0L;
      onChanged();
      return this;
    }

    private long requestedLocks_ ;
    /**
     * <code>uint64 requested_locks = 8;</code>
     * @return The requestedLocks.
     */
    @java.lang.Override
    public long getRequestedLocks() {
      return requestedLocks_;
    }
    /**
     * <code>uint64 requested_locks = 8;</code>
     * @param value The requestedLocks to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedLocks(long value) {
      
      requestedLocks_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 requested_locks = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestedLocks() {
      
      requestedLocks_ = 0L;
      onChanged();
      return this;
    }

    private long blockedLocks_ ;
    /**
     * <code>uint64 blocked_locks = 9;</code>
     * @return The blockedLocks.
     */
    @java.lang.Override
    public long getBlockedLocks() {
      return blockedLocks_;
    }
    /**
     * <code>uint64 blocked_locks = 9;</code>
     * @param value The blockedLocks to set.
     * @return This builder for chaining.
     */
    public Builder setBlockedLocks(long value) {
      
      blockedLocks_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 blocked_locks = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockedLocks() {
      
      blockedLocks_ = 0L;
      onChanged();
      return this;
    }

    private long usedVersions_ ;
    /**
     * <pre>
     **
     * &#64;brief for occ
     * </pre>
     *
     * <code>uint64 used_versions = 10;</code>
     * @return The usedVersions.
     */
    @java.lang.Override
    public long getUsedVersions() {
      return usedVersions_;
    }
    /**
     * <pre>
     **
     * &#64;brief for occ
     * </pre>
     *
     * <code>uint64 used_versions = 10;</code>
     * @param value The usedVersions to set.
     * @return This builder for chaining.
     */
    public Builder setUsedVersions(long value) {
      
      usedVersions_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     * &#64;brief for occ
     * </pre>
     *
     * <code>uint64 used_versions = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedVersions() {
      
      usedVersions_ = 0L;
      onChanged();
      return this;
    }

    private long requestedVersions_ ;
    /**
     * <code>uint64 requested_versions = 11;</code>
     * @return The requestedVersions.
     */
    @java.lang.Override
    public long getRequestedVersions() {
      return requestedVersions_;
    }
    /**
     * <code>uint64 requested_versions = 11;</code>
     * @param value The requestedVersions to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedVersions(long value) {
      
      requestedVersions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 requested_versions = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestedVersions() {
      
      requestedVersions_ = 0L;
      onChanged();
      return this;
    }

    private long blockedVersions_ ;
    /**
     * <code>uint64 blocked_versions = 12;</code>
     * @return The blockedVersions.
     */
    @java.lang.Override
    public long getBlockedVersions() {
      return blockedVersions_;
    }
    /**
     * <code>uint64 blocked_versions = 12;</code>
     * @param value The blockedVersions to set.
     * @return This builder for chaining.
     */
    public Builder setBlockedVersions(long value) {
      
      blockedVersions_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 blocked_versions = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockedVersions() {
      
      blockedVersions_ = 0L;
      onChanged();
      return this;
    }

    private long objectsRead_ ;
    /**
     * <code>uint64 objects_read = 13;</code>
     * @return The objectsRead.
     */
    @java.lang.Override
    public long getObjectsRead() {
      return objectsRead_;
    }
    /**
     * <code>uint64 objects_read = 13;</code>
     * @param value The objectsRead to set.
     * @return This builder for chaining.
     */
    public Builder setObjectsRead(long value) {
      
      objectsRead_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 objects_read = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearObjectsRead() {
      
      objectsRead_ = 0L;
      onChanged();
      return this;
    }

    private long objectsWrite_ ;
    /**
     * <code>uint64 objects_write = 14;</code>
     * @return The objectsWrite.
     */
    @java.lang.Override
    public long getObjectsWrite() {
      return objectsWrite_;
    }
    /**
     * <code>uint64 objects_write = 14;</code>
     * @param value The objectsWrite to set.
     * @return This builder for chaining.
     */
    public Builder setObjectsWrite(long value) {
      
      objectsWrite_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 objects_write = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearObjectsWrite() {
      
      objectsWrite_ = 0L;
      onChanged();
      return this;
    }

    private long timeWithoutNetwork_ ;
    /**
     * <code>uint64 time_without_network = 15;</code>
     * @return The timeWithoutNetwork.
     */
    @java.lang.Override
    public long getTimeWithoutNetwork() {
      return timeWithoutNetwork_;
    }
    /**
     * <code>uint64 time_without_network = 15;</code>
     * @param value The timeWithoutNetwork to set.
     * @return This builder for chaining.
     */
    public Builder setTimeWithoutNetwork(long value) {
      
      timeWithoutNetwork_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 time_without_network = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeWithoutNetwork() {
      
      timeWithoutNetwork_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList stepTimes_ = emptyLongList();
    private void ensureStepTimesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        stepTimes_ = mutableCopy(stepTimes_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @return A list containing the stepTimes.
     */
    public java.util.List<java.lang.Long>
        getStepTimesList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(stepTimes_) : stepTimes_;
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @return The count of stepTimes.
     */
    public int getStepTimesCount() {
      return stepTimes_.size();
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @param index The index of the element to return.
     * @return The stepTimes at the given index.
     */
    public long getStepTimes(int index) {
      return stepTimes_.getLong(index);
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @param index The index to set the value at.
     * @param value The stepTimes to set.
     * @return This builder for chaining.
     */
    public Builder setStepTimes(
        int index, long value) {
      ensureStepTimesIsMutable();
      stepTimes_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @param value The stepTimes to add.
     * @return This builder for chaining.
     */
    public Builder addStepTimes(long value) {
      ensureStepTimesIsMutable();
      stepTimes_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @param values The stepTimes to add.
     * @return This builder for chaining.
     */
    public Builder addAllStepTimes(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureStepTimesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stepTimes_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 step_times = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearStepTimes() {
      stepTimes_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:CCGraphRPC.Measurement)
  }

  // @@protoc_insertion_point(class_scope:CCGraphRPC.Measurement)
  private static final com.ccgraph.ccgraph.Measurement DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ccgraph.ccgraph.Measurement();
  }

  public static com.ccgraph.ccgraph.Measurement getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Measurement>
      PARSER = new com.google.protobuf.AbstractParser<Measurement>() {
    @java.lang.Override
    public Measurement parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Measurement(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Measurement> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Measurement> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ccgraph.ccgraph.Measurement getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

