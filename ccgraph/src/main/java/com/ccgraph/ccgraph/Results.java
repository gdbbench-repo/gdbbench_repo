// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ccgraph.proto

package com.ccgraph.ccgraph;

/**
 * Protobuf type {@code CCGraphRPC.Results}
 */
public final class Results extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:CCGraphRPC.Results)
    ResultsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Results.newBuilder() to construct.
  private Results(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Results() {
    code_ = 0;
    colName_ = java.util.Collections.emptyList();
    table_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Results();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Results(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            code_ = rawValue;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              colName_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
              mutable_bitField0_ |= 0x00000001;
            }
            colName_.add(input.readBytes());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              table_ = new java.util.ArrayList<com.ccgraph.ccgraph.RetRow>();
              mutable_bitField0_ |= 0x00000002;
            }
            table_.add(
                input.readMessage(com.ccgraph.ccgraph.RetRow.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.ccgraph.ccgraph.Measurement.Builder subBuilder = null;
            if (measure_ != null) {
              subBuilder = measure_.toBuilder();
            }
            measure_ = input.readMessage(com.ccgraph.ccgraph.Measurement.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(measure_);
              measure_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        colName_ = java.util.Collections.unmodifiableList(colName_); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        table_ = java.util.Collections.unmodifiableList(table_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Results_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Results_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ccgraph.ccgraph.Results.class, com.ccgraph.ccgraph.Results.Builder.class);
  }

  public static final int CODE_FIELD_NUMBER = 1;
  private int code_;
  /**
   * <code>.CCGraphRPC.Code code = 1;</code>
   * @return The enum numeric value on the wire for code.
   */
  @java.lang.Override public int getCodeValue() {
    return code_;
  }
  /**
   * <code>.CCGraphRPC.Code code = 1;</code>
   * @return The code.
   */
  @java.lang.Override public com.ccgraph.ccgraph.Code getCode() {
    @SuppressWarnings("deprecation")
    com.ccgraph.ccgraph.Code result = com.ccgraph.ccgraph.Code.valueOf(code_);
    return result == null ? com.ccgraph.ccgraph.Code.UNRECOGNIZED : result;
  }

  public static final int COL_NAME_FIELD_NUMBER = 2;
  private java.util.List<com.google.protobuf.ByteString> colName_;
  /**
   * <code>repeated bytes col_name = 2;</code>
   * @return A list containing the colName.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getColNameList() {
    return colName_;
  }
  /**
   * <code>repeated bytes col_name = 2;</code>
   * @return The count of colName.
   */
  public int getColNameCount() {
    return colName_.size();
  }
  /**
   * <code>repeated bytes col_name = 2;</code>
   * @param index The index of the element to return.
   * @return The colName at the given index.
   */
  public com.google.protobuf.ByteString getColName(int index) {
    return colName_.get(index);
  }

  public static final int TABLE_FIELD_NUMBER = 3;
  private java.util.List<com.ccgraph.ccgraph.RetRow> table_;
  /**
   * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.ccgraph.ccgraph.RetRow> getTableList() {
    return table_;
  }
  /**
   * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.ccgraph.ccgraph.RetRowOrBuilder> 
      getTableOrBuilderList() {
    return table_;
  }
  /**
   * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
   */
  @java.lang.Override
  public int getTableCount() {
    return table_.size();
  }
  /**
   * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
   */
  @java.lang.Override
  public com.ccgraph.ccgraph.RetRow getTable(int index) {
    return table_.get(index);
  }
  /**
   * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
   */
  @java.lang.Override
  public com.ccgraph.ccgraph.RetRowOrBuilder getTableOrBuilder(
      int index) {
    return table_.get(index);
  }

  public static final int MEASURE_FIELD_NUMBER = 4;
  private com.ccgraph.ccgraph.Measurement measure_;
  /**
   * <code>.CCGraphRPC.Measurement measure = 4;</code>
   * @return Whether the measure field is set.
   */
  @java.lang.Override
  public boolean hasMeasure() {
    return measure_ != null;
  }
  /**
   * <code>.CCGraphRPC.Measurement measure = 4;</code>
   * @return The measure.
   */
  @java.lang.Override
  public com.ccgraph.ccgraph.Measurement getMeasure() {
    return measure_ == null ? com.ccgraph.ccgraph.Measurement.getDefaultInstance() : measure_;
  }
  /**
   * <code>.CCGraphRPC.Measurement measure = 4;</code>
   */
  @java.lang.Override
  public com.ccgraph.ccgraph.MeasurementOrBuilder getMeasureOrBuilder() {
    return getMeasure();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (code_ != com.ccgraph.ccgraph.Code.kOk.getNumber()) {
      output.writeEnum(1, code_);
    }
    for (int i = 0; i < colName_.size(); i++) {
      output.writeBytes(2, colName_.get(i));
    }
    for (int i = 0; i < table_.size(); i++) {
      output.writeMessage(3, table_.get(i));
    }
    if (measure_ != null) {
      output.writeMessage(4, getMeasure());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (code_ != com.ccgraph.ccgraph.Code.kOk.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, code_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < colName_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(colName_.get(i));
      }
      size += dataSize;
      size += 1 * getColNameList().size();
    }
    for (int i = 0; i < table_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, table_.get(i));
    }
    if (measure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMeasure());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ccgraph.ccgraph.Results)) {
      return super.equals(obj);
    }
    com.ccgraph.ccgraph.Results other = (com.ccgraph.ccgraph.Results) obj;

    if (code_ != other.code_) return false;
    if (!getColNameList()
        .equals(other.getColNameList())) return false;
    if (!getTableList()
        .equals(other.getTableList())) return false;
    if (hasMeasure() != other.hasMeasure()) return false;
    if (hasMeasure()) {
      if (!getMeasure()
          .equals(other.getMeasure())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CODE_FIELD_NUMBER;
    hash = (53 * hash) + code_;
    if (getColNameCount() > 0) {
      hash = (37 * hash) + COL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getColNameList().hashCode();
    }
    if (getTableCount() > 0) {
      hash = (37 * hash) + TABLE_FIELD_NUMBER;
      hash = (53 * hash) + getTableList().hashCode();
    }
    if (hasMeasure()) {
      hash = (37 * hash) + MEASURE_FIELD_NUMBER;
      hash = (53 * hash) + getMeasure().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ccgraph.ccgraph.Results parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Results parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Results parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ccgraph.ccgraph.Results parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ccgraph.ccgraph.Results prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code CCGraphRPC.Results}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:CCGraphRPC.Results)
      com.ccgraph.ccgraph.ResultsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Results_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Results_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ccgraph.ccgraph.Results.class, com.ccgraph.ccgraph.Results.Builder.class);
    }

    // Construct using com.ccgraph.ccgraph.Results.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTableFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      code_ = 0;

      colName_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (tableBuilder_ == null) {
        table_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        tableBuilder_.clear();
      }
      if (measureBuilder_ == null) {
        measure_ = null;
      } else {
        measure_ = null;
        measureBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ccgraph.ccgraph.Ccgraph.internal_static_CCGraphRPC_Results_descriptor;
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Results getDefaultInstanceForType() {
      return com.ccgraph.ccgraph.Results.getDefaultInstance();
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Results build() {
      com.ccgraph.ccgraph.Results result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ccgraph.ccgraph.Results buildPartial() {
      com.ccgraph.ccgraph.Results result = new com.ccgraph.ccgraph.Results(this);
      int from_bitField0_ = bitField0_;
      result.code_ = code_;
      if (((bitField0_ & 0x00000001) != 0)) {
        colName_ = java.util.Collections.unmodifiableList(colName_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.colName_ = colName_;
      if (tableBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          table_ = java.util.Collections.unmodifiableList(table_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.table_ = table_;
      } else {
        result.table_ = tableBuilder_.build();
      }
      if (measureBuilder_ == null) {
        result.measure_ = measure_;
      } else {
        result.measure_ = measureBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ccgraph.ccgraph.Results) {
        return mergeFrom((com.ccgraph.ccgraph.Results)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ccgraph.ccgraph.Results other) {
      if (other == com.ccgraph.ccgraph.Results.getDefaultInstance()) return this;
      if (other.code_ != 0) {
        setCodeValue(other.getCodeValue());
      }
      if (!other.colName_.isEmpty()) {
        if (colName_.isEmpty()) {
          colName_ = other.colName_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureColNameIsMutable();
          colName_.addAll(other.colName_);
        }
        onChanged();
      }
      if (tableBuilder_ == null) {
        if (!other.table_.isEmpty()) {
          if (table_.isEmpty()) {
            table_ = other.table_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTableIsMutable();
            table_.addAll(other.table_);
          }
          onChanged();
        }
      } else {
        if (!other.table_.isEmpty()) {
          if (tableBuilder_.isEmpty()) {
            tableBuilder_.dispose();
            tableBuilder_ = null;
            table_ = other.table_;
            bitField0_ = (bitField0_ & ~0x00000002);
            tableBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTableFieldBuilder() : null;
          } else {
            tableBuilder_.addAllMessages(other.table_);
          }
        }
      }
      if (other.hasMeasure()) {
        mergeMeasure(other.getMeasure());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ccgraph.ccgraph.Results parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ccgraph.ccgraph.Results) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int code_ = 0;
    /**
     * <code>.CCGraphRPC.Code code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.CCGraphRPC.Code code = 1;</code>
     * @param value The enum numeric value on the wire for code to set.
     * @return This builder for chaining.
     */
    public Builder setCodeValue(int value) {
      
      code_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.CCGraphRPC.Code code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public com.ccgraph.ccgraph.Code getCode() {
      @SuppressWarnings("deprecation")
      com.ccgraph.ccgraph.Code result = com.ccgraph.ccgraph.Code.valueOf(code_);
      return result == null ? com.ccgraph.ccgraph.Code.UNRECOGNIZED : result;
    }
    /**
     * <code>.CCGraphRPC.Code code = 1;</code>
     * @param value The code to set.
     * @return This builder for chaining.
     */
    public Builder setCode(com.ccgraph.ccgraph.Code value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      code_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.CCGraphRPC.Code code = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCode() {
      
      code_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> colName_ = java.util.Collections.emptyList();
    private void ensureColNameIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        colName_ = new java.util.ArrayList<com.google.protobuf.ByteString>(colName_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @return A list containing the colName.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getColNameList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(colName_) : colName_;
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @return The count of colName.
     */
    public int getColNameCount() {
      return colName_.size();
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @param index The index of the element to return.
     * @return The colName at the given index.
     */
    public com.google.protobuf.ByteString getColName(int index) {
      return colName_.get(index);
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @param index The index to set the value at.
     * @param value The colName to set.
     * @return This builder for chaining.
     */
    public Builder setColName(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureColNameIsMutable();
      colName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @param value The colName to add.
     * @return This builder for chaining.
     */
    public Builder addColName(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureColNameIsMutable();
      colName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @param values The colName to add.
     * @return This builder for chaining.
     */
    public Builder addAllColName(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureColNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, colName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes col_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearColName() {
      colName_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<com.ccgraph.ccgraph.RetRow> table_ =
      java.util.Collections.emptyList();
    private void ensureTableIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        table_ = new java.util.ArrayList<com.ccgraph.ccgraph.RetRow>(table_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ccgraph.ccgraph.RetRow, com.ccgraph.ccgraph.RetRow.Builder, com.ccgraph.ccgraph.RetRowOrBuilder> tableBuilder_;

    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public java.util.List<com.ccgraph.ccgraph.RetRow> getTableList() {
      if (tableBuilder_ == null) {
        return java.util.Collections.unmodifiableList(table_);
      } else {
        return tableBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public int getTableCount() {
      if (tableBuilder_ == null) {
        return table_.size();
      } else {
        return tableBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public com.ccgraph.ccgraph.RetRow getTable(int index) {
      if (tableBuilder_ == null) {
        return table_.get(index);
      } else {
        return tableBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder setTable(
        int index, com.ccgraph.ccgraph.RetRow value) {
      if (tableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIsMutable();
        table_.set(index, value);
        onChanged();
      } else {
        tableBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder setTable(
        int index, com.ccgraph.ccgraph.RetRow.Builder builderForValue) {
      if (tableBuilder_ == null) {
        ensureTableIsMutable();
        table_.set(index, builderForValue.build());
        onChanged();
      } else {
        tableBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder addTable(com.ccgraph.ccgraph.RetRow value) {
      if (tableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIsMutable();
        table_.add(value);
        onChanged();
      } else {
        tableBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder addTable(
        int index, com.ccgraph.ccgraph.RetRow value) {
      if (tableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTableIsMutable();
        table_.add(index, value);
        onChanged();
      } else {
        tableBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder addTable(
        com.ccgraph.ccgraph.RetRow.Builder builderForValue) {
      if (tableBuilder_ == null) {
        ensureTableIsMutable();
        table_.add(builderForValue.build());
        onChanged();
      } else {
        tableBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder addTable(
        int index, com.ccgraph.ccgraph.RetRow.Builder builderForValue) {
      if (tableBuilder_ == null) {
        ensureTableIsMutable();
        table_.add(index, builderForValue.build());
        onChanged();
      } else {
        tableBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder addAllTable(
        java.lang.Iterable<? extends com.ccgraph.ccgraph.RetRow> values) {
      if (tableBuilder_ == null) {
        ensureTableIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, table_);
        onChanged();
      } else {
        tableBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder clearTable() {
      if (tableBuilder_ == null) {
        table_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        tableBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public Builder removeTable(int index) {
      if (tableBuilder_ == null) {
        ensureTableIsMutable();
        table_.remove(index);
        onChanged();
      } else {
        tableBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public com.ccgraph.ccgraph.RetRow.Builder getTableBuilder(
        int index) {
      return getTableFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public com.ccgraph.ccgraph.RetRowOrBuilder getTableOrBuilder(
        int index) {
      if (tableBuilder_ == null) {
        return table_.get(index);  } else {
        return tableBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public java.util.List<? extends com.ccgraph.ccgraph.RetRowOrBuilder> 
         getTableOrBuilderList() {
      if (tableBuilder_ != null) {
        return tableBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(table_);
      }
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public com.ccgraph.ccgraph.RetRow.Builder addTableBuilder() {
      return getTableFieldBuilder().addBuilder(
          com.ccgraph.ccgraph.RetRow.getDefaultInstance());
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public com.ccgraph.ccgraph.RetRow.Builder addTableBuilder(
        int index) {
      return getTableFieldBuilder().addBuilder(
          index, com.ccgraph.ccgraph.RetRow.getDefaultInstance());
    }
    /**
     * <code>repeated .CCGraphRPC.RetRow table = 3;</code>
     */
    public java.util.List<com.ccgraph.ccgraph.RetRow.Builder> 
         getTableBuilderList() {
      return getTableFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ccgraph.ccgraph.RetRow, com.ccgraph.ccgraph.RetRow.Builder, com.ccgraph.ccgraph.RetRowOrBuilder> 
        getTableFieldBuilder() {
      if (tableBuilder_ == null) {
        tableBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ccgraph.ccgraph.RetRow, com.ccgraph.ccgraph.RetRow.Builder, com.ccgraph.ccgraph.RetRowOrBuilder>(
                table_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        table_ = null;
      }
      return tableBuilder_;
    }

    private com.ccgraph.ccgraph.Measurement measure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ccgraph.ccgraph.Measurement, com.ccgraph.ccgraph.Measurement.Builder, com.ccgraph.ccgraph.MeasurementOrBuilder> measureBuilder_;
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     * @return Whether the measure field is set.
     */
    public boolean hasMeasure() {
      return measureBuilder_ != null || measure_ != null;
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     * @return The measure.
     */
    public com.ccgraph.ccgraph.Measurement getMeasure() {
      if (measureBuilder_ == null) {
        return measure_ == null ? com.ccgraph.ccgraph.Measurement.getDefaultInstance() : measure_;
      } else {
        return measureBuilder_.getMessage();
      }
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public Builder setMeasure(com.ccgraph.ccgraph.Measurement value) {
      if (measureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        measure_ = value;
        onChanged();
      } else {
        measureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public Builder setMeasure(
        com.ccgraph.ccgraph.Measurement.Builder builderForValue) {
      if (measureBuilder_ == null) {
        measure_ = builderForValue.build();
        onChanged();
      } else {
        measureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public Builder mergeMeasure(com.ccgraph.ccgraph.Measurement value) {
      if (measureBuilder_ == null) {
        if (measure_ != null) {
          measure_ =
            com.ccgraph.ccgraph.Measurement.newBuilder(measure_).mergeFrom(value).buildPartial();
        } else {
          measure_ = value;
        }
        onChanged();
      } else {
        measureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public Builder clearMeasure() {
      if (measureBuilder_ == null) {
        measure_ = null;
        onChanged();
      } else {
        measure_ = null;
        measureBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public com.ccgraph.ccgraph.Measurement.Builder getMeasureBuilder() {
      
      onChanged();
      return getMeasureFieldBuilder().getBuilder();
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    public com.ccgraph.ccgraph.MeasurementOrBuilder getMeasureOrBuilder() {
      if (measureBuilder_ != null) {
        return measureBuilder_.getMessageOrBuilder();
      } else {
        return measure_ == null ?
            com.ccgraph.ccgraph.Measurement.getDefaultInstance() : measure_;
      }
    }
    /**
     * <code>.CCGraphRPC.Measurement measure = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ccgraph.ccgraph.Measurement, com.ccgraph.ccgraph.Measurement.Builder, com.ccgraph.ccgraph.MeasurementOrBuilder> 
        getMeasureFieldBuilder() {
      if (measureBuilder_ == null) {
        measureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ccgraph.ccgraph.Measurement, com.ccgraph.ccgraph.Measurement.Builder, com.ccgraph.ccgraph.MeasurementOrBuilder>(
                getMeasure(),
                getParentForChildren(),
                isClean());
        measure_ = null;
      }
      return measureBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:CCGraphRPC.Results)
  }

  // @@protoc_insertion_point(class_scope:CCGraphRPC.Results)
  private static final com.ccgraph.ccgraph.Results DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ccgraph.ccgraph.Results();
  }

  public static com.ccgraph.ccgraph.Results getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Results>
      PARSER = new com.google.protobuf.AbstractParser<Results>() {
    @java.lang.Override
    public Results parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Results(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Results> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Results> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ccgraph.ccgraph.Results getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

